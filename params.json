{"name":"unlink-broken-links","tagline":"Find broken symlinks and destroy them","body":"# unlink-broken-links [![Build Status](https://travis-ci.org/boneskull/unlink-broken-links.svg?branch=master)](https://travis-ci.org/boneskull/unlink-broken-links)\r\n\r\n> Find broken symlinks and destroy them \r\n\r\n## Install\r\n\r\n```shell\r\n$ npm install -g unlink-broken-links\r\n```\r\n\r\n## Usage\r\n\r\n```\r\nunlink-broken-links [directory]\r\n\r\nOptions:\r\n  --version        Show version number                                 [boolean]\r\n  --recursive, -r  Recursively walk the directory     [boolean] [default: false]\r\n  --help, -h       Show help                                           [boolean]\r\n```\r\n\r\n## Programmatic API\r\n\r\n```js\r\nvar unlinkBrokenLinks = require('unlink-broken-links');\r\n\r\n// \"recursive\" defaults to false\r\nunlinkBrokenLinks('/some/path', {recursive: true})\r\n  .then(function(result) {\r\n    console.log(result.removed); // array of removed files (if any)\r\n    console.log(result.errors); // array of errors (if any)\r\n  });\r\n\r\n// or callback-style\r\nunlinkBrokenLinks('/some/path', {recursive: true}, function(err, result) {\r\n  // \"err\" will only be truthy if something's terribly wrong \r\n  console.log(result.removed); // array of removed files (if any)\r\n  console.log(result.errors); // array of errors (if any)\r\n});\r\n```\r\n\r\n## License\r\n\r\nÂ© 2015 [Christopher Hiller](https://boneskull.com).  Licensed MIT.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}